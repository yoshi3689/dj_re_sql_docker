# docker compose -f docker-compose_local_db.yml 

version: '3.8'
services:
  client: 
    env_file:
      - ./environments/client.env
    depends_on:
      - backend
    build:
      context: ./blogapi
      dockerfile: Dockerfile
    restart: on-failure
    container_name: drt_client
    volumes:
      - /app/node_modules
    networks:
      app_net:
        ipv4_address: "193.168.0.5"


  backend:
    depends_on:
      - db
    env_file:
      - ./environments/backend.env
    build:
      context: ./django
    command: gunicorn core.wsgi --bind 0.0.0.0:8000
    ports: 
      - 8000:8000
    networks:
      app_net:
        ipv4_address: "193.168.0.6"
  nginx: 
    depends_on:
      - backend
      - client
      - db
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    image: nginx:latest
    ports:
      - '80:80'
    networks:
      app_net:
        ipv4_address: "193.168.0.4"
  
  db:
    container_name: postgresql_db
    image: postgres
    env_file:
      - ./environments/backend.env
    restart: always 
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: test_db
    ports:
      - "5432:5432"
    networks:
      app_net:
        ipv4_address: "193.168.0.3"

networks:
  app_net:
    ipam:
      driver: default
      config:
        - subnet: "193.168.0.0/24"
          gateway: 193.168.0.1