version: '3.8'

services:
  backend:
    build:
      context: ./django
    command: gunicorn core.wsgi --bind 0.0.0.0:8000
    # expose the django outside of the container, so that the frontend can access
    ports: 
      - 8000:8000
    depends_on:
      - db
    # networks:
    #   app_net:
    #     ipv4_address: "193.168.0.6"
  
  frontend: 
    build:
      context: ./react/blogapi
    volumes:
      - react_build:/react/build
    depends_on:
      - backend
    # networks:
    #   app_net:
    #     ipv4_address: "193.168.0.5"
  
  nginx: 
    image: nginx:latest
    ports:
      - 80:8080
    # when the web client makes a request at port80, that goes to nginx running at 8080
      # map the react app to the nginx server so that it can serve the app to the client
    volumes: 
      - ./nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
      - react_build:/var/www/react
    # update nginx config so that the config is set up with the config file we wrote
    # take req from p80, move it to 8080, colllect react data and then send it over to the client
    # /etc/nginx/ by default ginx container has this file structure
    # bind mount -- mounting the container to the file system
    # tmpfs mount -- mounting the container to some memory other than the file system
    depends_on:
      - backend
      - frontend
      - db
    # networks:
    #   app_net:
    #     ipv4_address: "193.168.0.4"
  
  db:
    container_name: psql_db
    image: postgres
    restart: always
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: test_db
    ports: 
      - "5432:5432"
    # assigns a static ip to the this container
    # networks:
    #   app_net:
    #     ipv4_address: "193.168.0.2"
  
  pgadmin: 
    container_name: pgadmin4
    image: dpage/pgadmin4
    restart: always
    volumes:
      - ./data/pgadmin-data:/var/lib/pgadmin
    environment: 
      PGADMIN_DEFAULT_EMAIL: root@root.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "5050:2000"
    # assigns a static ip to the this container
    # networks:
    #   app_net:
    #     ipv4_address: "193.168.0.3"

volumes: 
  react_build:
# create a network and assigns a static ip to the gateway
# networks:
#   app_net:
#     ipam:
#       driver: default
#       config:
#         - subnet: "193.168.0.0/24"
#           gateway: 193.168.0.1




